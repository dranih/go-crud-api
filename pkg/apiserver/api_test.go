package apiserver

import (
	"fmt"
	"net/http"
	"net/url"
	"sync"
	"testing"

	"github.com/dranih/go-crud-api/pkg/utils"
)

func TestNewApi(t *testing.T) {
	config := ReadConfig("../../test/")
	config.Init()
	serverStarted := new(sync.WaitGroup)
	serverStarted.Add(1)
	api := NewApi(config.Api)
	go api.Handle(config.Server, serverStarted)
	//Waiting http server to start
	serverStarted.Wait()
}

// Global API tests for records
// To check compatibility with php-crud-api
func TestRecordsApi(t *testing.T) {
	utils.SelectConfig()
	config := ReadConfig()
	config.Init()
	serverStarted := new(sync.WaitGroup)
	serverStarted.Add(1)
	api := NewApi(config.Api)
	go api.Handle(config.Server, serverStarted)
	//Waiting http server to start
	serverStarted.Wait()
	serverUrl := fmt.Sprintf("http://%s:%d", config.Server.Address, config.Server.Port)

	//https://ieftimov.com/post/testing-in-go-testing-http-servers/
	//https://stackoverflow.com/questions/42474259/golang-how-to-live-test-an-http-server
	tt := []utils.Test{
		{
			Name:       "001_list_posts",
			Method:     http.MethodGet,
			Uri:        "/records/posts",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","id":1,"user_id":1},{"category_id":2,"content":"It works!","id":2,"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "002_list_post_columns",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id,content",
			Body:       ``,
			Want:       `{"records":[{"content":"blog started","id":1},{"content":"It works!","id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "003_read_post_A",
			Method:     http.MethodGet,
			Uri:        "/records/posts/2",
			Body:       ``,
			Want:       `{"category_id":2,"content":"It works!","id":2,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "003_read_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/0",
			Body:       ``,
			Want:       `{"code":1003,"message":"Record '0' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		{
			Name:       "004_read_posts",
			Method:     http.MethodGet,
			Uri:        "/records/posts/1,2",
			Body:       ``,
			Want:       `[{"category_id":1,"content":"blog started","id":1,"user_id":1},{"category_id":2,"content":"It works!","id":2,"user_id":1}]`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "005_read_post_columns",
			Method:     http.MethodGet,
			Uri:        "/records/posts/2?include=id,content",
			Body:       ``,
			Want:       `{"content":"It works!","id":2}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "006_add_post",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"test"}`,
			Want:       `3`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "007_edit_post_A",
			Method:     http.MethodPut,
			Uri:        "/records/posts/3",
			Body:       `{"user_id":1,"category_id":1,"content":"test (edited)"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "007_edit_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `{"category_id":1,"content":"test (edited)","id":3,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:   "007_edit_post_C",
			Method: http.MethodPut,
			Uri:    "/records/posts/3",
			Body: `    {
				"user_id": 1,
				"category_id": 1,
				"content": "test (edited 1)"
			}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "007_edit_post_D",
			Method:     http.MethodGet,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `{"category_id":1,"content":"test (edited 1)","id":3,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "008_edit_post_columns_missing_field_A",
			Method:     http.MethodPut,
			Uri:        "/records/posts/3?include=id,content",
			Body:       `{"content":"test (edited 2)"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "008_edit_post_columns_missing_field_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `{"category_id":1,"content":"test (edited 2)","id":3,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "009_edit_post_columns_extra_field_A",
			Method:     http.MethodPut,
			Uri:        "/records/posts/3?include=id,content",
			Body:       `{"user_id":2,"content":"test (edited 3)"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "009_edit_post_columns_extra_field_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `{"category_id":1,"content":"test (edited 3)","id":3,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "010_edit_post_with_utf8_content_A",
			Method:     http.MethodPut,
			Uri:        "/records/posts/2",
			Body:       `{"content":"ü§ó Gr√º√ügott, –íi—Ç–∞—é, dobr√Ω de≈à, hyv√§√§ p√§iv√§√§, ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éù·Éë·Éê, ŒìŒµŒπŒ± œÉŒ±œÇ, g√≥√∞an dag, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "010_edit_post_with_utf8_content_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/2",
			Body:       ``,
			Want:       `{"category_id":2,"content":"ü§ó Gr√º√ügott, –íi—Ç–∞—é, dobr√Ω de≈à, hyv√§√§ p√§iv√§√§, ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éù·Éë·Éê, ŒìŒµŒπŒ± œÉŒ±œÇ, g√≥√∞an dag, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ","id":2,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:          "011_edit_post_with_utf8_content_with_post_A",
			Method:        http.MethodPut,
			Uri:           "/records/posts/2",
			Body:          `content=%F0%9F%A6%80%E2%82%AC%20Gr%C3%BC%C3%9Fgott%2C%20%D0%92i%D1%82%D0%B0%D1%8E%2C%20dobr%C3%BD%20de%C5%88%2C%20hyv%C3%A4%C3%A4%20p%C3%A4iv%C3%A4%C3%A4%2C%20%E1%83%92%E1%83%90%E1%83%9B%E1%83%90%E1%83%A0%E1%83%AF%E1%83%9D%E1%83%91%E1%83%90%2C%20%CE%93%CE%B5%CE%B9%CE%B1%20%CF%83%CE%B1%CF%82%2C%20g%C3%B3%C3%B0an%20dag%2C%20%D0%B7%D0%B4%D1%80%D0%B0%D0%B2%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5`,
			RequestHeader: map[string]string{"Content-Type": "application/x-www-form-urlencoded"},
			Want:          `1`,
			StatusCode:    http.StatusOK,
		},
		{
			Name:       "011_edit_post_with_utf8_content_with_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/2",
			Body:       ``,
			Want:       `{"category_id":2,"content":"ü¶Ä‚Ç¨ Gr√º√ügott, –íi—Ç–∞—é, dobr√Ω de≈à, hyv√§√§ p√§iv√§√§, ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éù·Éë·Éê, ŒìŒµŒπŒ± œÉŒ±œÇ, g√≥√∞an dag, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ","id":2,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "012_delete_post_A",
			Method:     http.MethodDelete,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "012_delete_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/3",
			Body:       ``,
			Want:       `{"code":1003,"message":"Record '3' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		{
			Name:          "013_add_post_with_post",
			Method:        http.MethodPost,
			Uri:           "/records/posts",
			Body:          `user_id=1&category_id=1&content=test`,
			RequestHeader: map[string]string{"Content-Type": "application/x-www-form-urlencoded"},
			Want:          `4`,
			StatusCode:    http.StatusOK,
		},
		{
			Name:          "014_edit_post_with_post_A",
			Method:        http.MethodPut,
			Uri:           "/records/posts/4",
			Body:          `user_id=1&category_id=1&content=test+(edited)`,
			RequestHeader: map[string]string{"Content-Type": "application/x-www-form-urlencoded"},
			Want:          `1`,
			StatusCode:    http.StatusOK,
		},
		{
			Name:       "014_edit_post_with_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/4",
			Body:       ``,
			Want:       `{"category_id":1,"content":"test (edited)","id":4,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "015_delete_post_ignore_columns_A",
			Method:     http.MethodDelete,
			Uri:        "/records/posts/4?include=id,content",
			Body:       ``,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "015_delete_post_ignore_columns_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts/4",
			Body:       ``,
			Want:       `{"code":1003,"message":"Record '4' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		{
			Name:       "016_list_with_paginate_A",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#1"}`,
			Want:       `5`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_B",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#2"}`,
			Want:       `6`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_C",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#3"}`,
			Want:       `7`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_D",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#4"}`,
			Want:       `8`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_E",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#5"}`,
			Want:       `9`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_F",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#6"}`,
			Want:       `10`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_G",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#7"}`,
			Want:       `11`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_H",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#8"}`,
			Want:       `12`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_I",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#9"}`,
			Want:       `13`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_J",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":1,"category_id":1,"content":"#10"}`,
			Want:       `14`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "016_list_with_paginate_K",
			Method:     http.MethodGet,
			Uri:        "/records/posts?page=2,2&order=id",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"#1","id":5,"user_id":1},{"category_id":1,"content":"#2","id":6,"user_id":1}],"results":12}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "017_edit_post_primary_key",
			Method:     http.MethodPut,
			Uri:        "/records/posts/2",
			Body:       `{"id":1}`,
			Want:       `0`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "018_add_post_missing_field",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"category_id":1,"content":"test"}`,
			Want:       `{"code":1010,"message":"Data integrity violation"}`,
			StatusCode: http.StatusConflict,
		},
		{
			Name:       "019_list_with_paginate_in_multiple_order",
			Method:     http.MethodGet,
			Uri:        "/records/posts?page=1,2&order=category_id,asc&order=id,desc",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"#10","id":14,"user_id":1},{"category_id":1,"content":"#9","id":13,"user_id":1}],"results":12}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "020_list_with_paginate_in_descending_order",
			Method:     http.MethodGet,
			Uri:        "/records/posts?page=2,2&order=id,desc",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"#8","id":12,"user_id":1},{"category_id":1,"content":"#7","id":11,"user_id":1}],"results":12}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "021_list_with_size",
			Method:     http.MethodGet,
			Uri:        "/records/posts?order=id&size=1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","id":1,"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "022_list_with_zero_page_size_A",
			Method:     http.MethodGet,
			Uri:        "/records/posts?order=id&page=1,0",
			Body:       ``,
			Want:       `{"records":[],"results":12}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "022_list_with_zero_page_size_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts?filter=id,eq,0&page=1,0",
			Body:       ``,
			Want:       `{"records":[],"results":0}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "023_list_with_zero_size",
			Method:     http.MethodGet,
			Uri:        "/records/posts?order=id&size=0",
			Body:       ``,
			Want:       `{"records":[]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "024_list_with_paginate_last_page",
			Method:     http.MethodGet,
			Uri:        "/records/posts?page=3,5&order=id",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"#9","id":13,"user_id":1},{"category_id":1,"content":"#10","id":14,"user_id":1}],"results":12}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "025_list_example_from_readme_full_record",
			Method:     http.MethodGet,
			Uri:        "/records/posts?filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","id":1,"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "026_list_example_from_readme_with_exclude",
			Method:     http.MethodGet,
			Uri:        "/records/posts?exclude=id&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "027_list_example_from_readme_users_only",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=users&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","id":1,"user_id":{"api_key":"123456789abc","id":1,"location":null,"password":"pass1","username":"user1"}}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "028_read_example_from_readme_users_only",
			Method:     http.MethodGet,
			Uri:        "/records/posts/1?join=users",
			Body:       ``,
			Want:       `{"category_id":1,"content":"blog started","id":1,"user_id":{"api_key":"123456789abc","id":1,"location":null,"password":"pass1","username":"user1"}}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "029_list_example_from_readme_comments_only",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=comments&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"comments":[{"category_id":3,"id":1,"message":"great","post_id":1},{"category_id":3,"id":2,"message":"fantastic","post_id":1}],"content":"blog started","id":1,"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "030_list_example_from_readme_tags_only",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=tags&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":1,"content":"blog started","id":1,"tags":[{"id":1,"is_important":false,"name":"funny"},{"id":2,"is_important":true,"name":"important"}],"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "031_list_example_from_readme_tags_with_join_path",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=categories&join=post_tags,tags&join=comments&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":{"icon":null,"id":1,"name":"announcement"},"comments":[{"category_id":3,"id":1,"message":"great","post_id":1},{"category_id":3,"id":2,"message":"fantastic","post_id":1}],"content":"blog started","id":1,"post_tags":[{"id":1,"post_id":1,"tag_id":{"id":1,"is_important":false,"name":"funny"}},{"id":2,"post_id":1,"tag_id":{"id":2,"is_important":true,"name":"important"}}],"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "032_list_example_from_readme",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=categories&join=tags&join=comments&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":{"icon":null,"id":1,"name":"announcement"},"comments":[{"category_id":3,"id":1,"message":"great","post_id":1},{"category_id":3,"id":2,"message":"fantastic","post_id":1}],"content":"blog started","id":1,"tags":[{"id":1,"is_important":false,"name":"funny"},{"id":2,"is_important":true,"name":"important"}],"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "033_list_example_from_readme_tag_name_only",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=tags.name&join=categories&join=post_tags,tags&join=comments&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":{"id":1},"comments":[{"post_id":1},{"post_id":1}],"id":1,"post_tags":[{"post_id":1,"tag_id":{"id":1,"name":"funny"}},{"post_id":1,"tag_id":{"id":2,"name":"important"}}]}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "034_list_example_from_readme_with_transform_with_exclude",
			Method:     http.MethodGet,
			Uri:        "/records/posts?join=categories&join=post_tags,tags&join=comments&exclude=comments.message,comments.category_id&filter=id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"category_id":{"icon":null,"id":1,"name":"announcement"},"comments":[{"id":1,"post_id":1},{"id":2,"post_id":1}],"content":"blog started","id":1,"post_tags":[{"id":1,"post_id":1,"tag_id":{"id":1,"is_important":false,"name":"funny"}},{"id":2,"post_id":1,"tag_id":{"id":2,"is_important":true,"name":"important"}}],"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "035_edit_category_with_binary_content_A",
			Method:     http.MethodPut,
			Uri:        "/records/categories/2",
			Body:       `{"icon":"4oKsIABhYmMACg1cYgA"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "035_edit_category_with_binary_content_B",
			Method:     http.MethodGet,
			Uri:        "/records/categories/2",
			Body:       ``,
			Want:       `{"icon":"4oKsIABhYmMACg1cYgA=","id":2,"name":"article"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "036_edit_category_with_null_A",
			Method:     http.MethodPut,
			Uri:        "/records/categories/2",
			Body:       `{"icon":""}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "036_edit_category_with_null_B",
			Method:     http.MethodGet,
			Uri:        "/records/categories/2",
			Body:       ``,
			Want:       `{"icon":"","id":2,"name":"article"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "036_edit_category_with_null_C",
			Method:     http.MethodPut,
			Uri:        "/records/categories/2",
			Body:       `{"icon":null}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "036_edit_category_with_null_D",
			Method:     http.MethodGet,
			Uri:        "/records/categories/2",
			Body:       ``,
			Want:       `{"icon":null,"id":2,"name":"article"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:          "037_edit_category_with_binary_content_with_post_A",
			Method:        http.MethodPut,
			Uri:           "/records/categories/2",
			Body:          `icon=4oKsIABhYmMACg1cYgA`,
			RequestHeader: map[string]string{"Content-Type": "application/x-www-form-urlencoded"},
			Want:          `1`,
			StatusCode:    http.StatusOK,
		},
		{
			Name:       "037_edit_category_with_binary_content_with_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/categories/2",
			Body:       ``,
			Want:       `{"icon":"4oKsIABhYmMACg1cYgA=","id":2,"name":"article"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "038_list_categories_with_binary_content",
			Method:     http.MethodGet,
			Uri:        "/records/categories?filter=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"icon":null,"id":1,"name":"announcement"},{"icon":"4oKsIABhYmMACg1cYgA=","id":2,"name":"article"}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:          "039_edit_category_with_null_with_post_A",
			Method:        http.MethodPut,
			Uri:           "/records/categories/2",
			Body:          `icon__is_null`,
			RequestHeader: map[string]string{"Content-Type": "application/x-www-form-urlencoded"},
			Want:          `1`,
			StatusCode:    http.StatusOK,
		},
		{
			Name:       "039_edit_category_with_null_with_post_B",
			Method:     http.MethodGet,
			Uri:        "/records/categories/2",
			Body:       ``,
			Want:       `{"icon":null,"id":2,"name":"article"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "040_add_post_failure",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `["truncat`,
			Want:       `{"code":1008,"message":"Cannot read HTTP message"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		{
			Name:   "041_cors_pre_flight",
			Method: http.MethodOptions,
			Uri:    "/records/posts/1?include=id",
			RequestHeader: map[string]string{
				"Origin":                         "http://example.com",
				"Access-Control-Request-Method":  "POST",
				"Access-Control-Request-Headers": "X-XSRF-TOKEN, X-Requested-With"},
			Body: ``,
			Want: ``,
			WantHeader: map[string]string{
				"Access-Control-Allow-Headers":     "Content-Type, X-XSRF-TOKEN, X-Authorization",
				"Access-Control-Allow-Methods":     "OPTIONS, GET, PUT, POST, DELETE, PATCH",
				"Access-Control-Max-Age":           "1728000",
				"Access-Control-Allow-Credentials": "true",
				"Access-Control-Allow-Origin":      "http://example.com"},
			StatusCode: http.StatusOK,
		},
		{
			Name:   "042_cors_headers",
			Method: http.MethodGet,
			Uri:    "/records/posts/1?include=id",
			RequestHeader: map[string]string{
				"Origin": "http://example.com",
			},
			Body: ``,
			Want: `{"id":1}`,
			WantHeader: map[string]string{
				"Access-Control-Allow-Credentials": "true",
				"Access-Control-Allow-Origin":      "http://example.com"},
			StatusCode: http.StatusOK,
		},
		{
			Name:       "043_error_on_invalid_json",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"}`,
			Want:       `{"code":1008,"message":"Cannot read HTTP message"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		{
			Name:   "044_error_on_duplicate_unique_key",
			Method: http.MethodPost,
			Uri:    "/records/kunsth√•ndv√¶rk",
			//Rewrite body, seems like id in the test 044 from php-crud-api is not a duplicate...
			Body:       `{"id":"e31ecfe6-591f-4660-9fbd-1a232083037f","Umlauts √§_√∂_√º-COUNT":1, "user_id":1}`,
			Want:       `{"code":1009,"message":"Duplicate key exception"}`,
			StatusCode: http.StatusConflict,
		},
		{
			Name:       "045_error_on_failing_foreign_key_constraint",
			Method:     http.MethodPost,
			Uri:        "/records/posts",
			Body:       `{"user_id":3,"category_id":1,"content":"fk constraint"}`,
			Want:       `{"code":1010,"message":"Data integrity violation"}`,
			StatusCode: http.StatusConflict,
		},
		{
			Name:       "046_error_on_non_existing_table",
			Method:     http.MethodGet,
			Uri:        "/records/postzzz",
			Body:       ``,
			Want:       `{"code":1001,"message":"Table 'postzzz' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		{
			Name:       "047_error_on_invalid_path",
			Method:     http.MethodGet,
			Uri:        "/postzzz",
			Body:       ``,
			Want:       `{"code":1000,"message":"Route '/postzzz' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		{
			Name:       "048_error_on_invalid_argument_count",
			Method:     http.MethodPut,
			Uri:        "/records/posts/1,2",
			Body:       `{"id":1,"user_id":1,"category_id":1,"content":"blog started"}`,
			Want:       `{"code":1002,"message":"Argument count mismatch in '1,2'"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		{
			Name:       "049_error_on_invalid_argument_count",
			Method:     http.MethodPut,
			Uri:        "/records/posts/1,2",
			Body:       `[{"id":1,"user_id":1,"category_id":1,"content":"blog started"}]`,
			Want:       `{"code":1002,"message":"Argument count mismatch in '1,2'"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		{
			Name:       "050_no_error_on_argument_count_one",
			Method:     http.MethodPut,
			Uri:        "/records/posts/1",
			Body:       `[{"id":1,"user_id":1,"category_id":1,"content":"blog started"}]`,
			Want:       `[1]`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "051_error_on_invalid_argument_count",
			Method:     http.MethodPut,
			Uri:        "/records/posts/1",
			Body:       `[{"id":1},{"id":2}]`,
			Want:       `{"code":1002,"message":"Argument count mismatch in '1'"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		{
			Name:       "052_edit_user_location_A",
			Method:     http.MethodPut,
			Uri:        "/records/users/1",
			Body:       `{"location":"POINT(30 20)"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "052_edit_user_location_B",
			Method:     http.MethodGet,
			Uri:        "/records/users/1?include=id,location",
			Body:       ``,
			Want:       `{"id":1,"location":"POINT(30 20)"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "053_list_user_locations",
			Method:     http.MethodGet,
			Uri:        "/records/users?include=id,location",
			Body:       ``,
			Want:       `{"records":[{"id":1,"location":"POINT(30 20)"},{"id":2,"location":null}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "054_edit_user_with_id_A",
			Method:     http.MethodPut,
			Uri:        "/records/users/1",
			Body:       `{"id":2,"password":"testtest2"}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "054_edit_user_with_id_B",
			Method:     http.MethodGet,
			Uri:        "/records/users/1?include=id,username,password",
			Body:       ``,
			Want:       `{"id":1,"password":"testtest2","username":"user1"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "055_filter_category_on_null_icon_A",
			Method:     http.MethodGet,
			Uri:        "/records/categories?filter=icon,is,null&filter=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"icon":null,"id":1,"name":"announcement"},{"icon":null,"id":2,"name":"article"}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "055_filter_category_on_null_icon_B",
			Method:     http.MethodGet,
			Uri:        "/records/categories?filter=icon,is&filter=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"icon":null,"id":1,"name":"announcement"},{"icon":null,"id":2,"name":"article"}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "056_filter_category_on_not_null_icon",
			Method:     http.MethodGet,
			Uri:        "/records/categories?filter=icon,nis,null",
			Body:       ``,
			Want:       `{"records":[]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "057_filter_on_and_A",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter=id,ge,1&filter=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "057_filter_on_and_B",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter[]=id,ge,1&filter[]=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "057_filter_on_and_C",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter[0]=id,ge,1&filter[1]=id,le,2",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "058_filter_on_or",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter1=id,eq,1&filter2=id,eq,2",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "059_filter_on_and_plus_or",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter1=id,eq,1&filter2=id,gt,1&filter2=id,lt,3",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "060_filter_on_or_plus_and",
			Method:     http.MethodGet,
			Uri:        "/records/posts?include=id&filter1=id,eq,1&filter2=id,eq,2&filter=user_id,eq,1",
			Body:       ``,
			Want:       `{"records":[{"id":1},{"id":2}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "061_get_post_content_with_included_tag_names",
			Method:     http.MethodGet,
			Uri:        "/records/posts/1?include=content,tags.name&join=tags",
			Body:       ``,
			Want:       `{"content":"blog started","id":1,"tags":[{"id":1,"name":"funny"},{"id":2,"name":"important"}]}`,
			StatusCode: http.StatusOK,
		},
		/* Needs authorization middlware
		{
			Name:       "062_read_kunsthandvaerk",
			Method:     http.MethodGet,
			Uri:        "/records/kunsth√•ndv√¶rk/e42c77c6-06a4-4502-816c-d112c7142e6d",
			Body:       ``,
			Want:       `{"id":"e42c77c6-06a4-4502-816c-d112c7142e6d","invisible_id":"e42c77c6-06a4-4502-816c-d112c7142e6d","Umlauts √§_√∂_√º-COUNT":1,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "063_list_kunsthandvaerk",
			Method:     http.MethodGet,
			Uri:        "/records/kunsth√•ndv√¶rk",
			Body:       ``,
			Want:       `{"records":[{"id":"e42c77c6-06a4-4502-816c-d112c7142e6d","invisible_id":"e42c77c6-06a4-4502-816c-d112c7142e6d","Umlauts √§_√∂_√º-COUNT":1,"user_id":1}]}`,
			StatusCode: http.StatusOK,
		},
		*/
		{
			Name:   "064_add_kunsthandvaerk",
			Method: http.MethodPost,
			Uri:    "/records/kunsth√•ndv√¶rk",
			//Adding a user_id as it should be not null
			Body:       `{"id":"34451583-a747-4417-bdf0-bec7a5eacffa","Umlauts √§_√∂_√º-COUNT":3,"user_id":1}`,
			Want:       `"34451583-a747-4417-bdf0-bec7a5eacffa"`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "065_edit_kunsthandvaerk",
			Method:     http.MethodPut,
			Uri:        "/records/kunsth√•ndv√¶rk/34451583-a747-4417-bdf0-bec7a5eacffa",
			Body:       `{"Umlauts √§_√∂_√º-COUNT":3}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "066_delete_kunsthandvaerk",
			Method:     http.MethodDelete,
			Uri:        "/records/kunsth√•ndv√¶rk/34451583-a747-4417-bdf0-bec7a5eacffa",
			Body:       ``,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		/* Needs validation middleware
		{
			Name:       "067_edit_comment_with_validation",
			Method:     http.MethodPut,
			Uri:        "/records/comments/4",
			Body:       `{"post_id":"two"}`,
			Want:       `{"code":1013,"details":{"post_id":"must be numeric"},"message":"Input validation failed for 'comments'"}`,
			StatusCode: http.StatusUnprocessableEntity,
		},
		*/
		/* Needs sanitation middleware
		{
			Name:       "068_add_comment_with_sanitation_A",
			Method:     http.MethodPost,
			Uri:        "/records/comments",
			Body:       `{"user_id":1,"post_id":2,"message":"<h1>Title</h1> <p>Body</p>","category_id":3}`,
			Want:       `5`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "068_add_comment_with_sanitation_B",
			Method:     http.MethodGet,
			Uri:        "/records/comments/5",
			Body:       ``,
			Want:       `{"category_id":3,"id":5,"post_id":2,"message":"Title Body"}`,
			StatusCode: http.StatusOK,
		},
		*/
		{
			Name:       "069_increment_event_visitors_A",
			Method:     http.MethodGet,
			Uri:        "/records/events/1?include=visitors",
			Body:       ``,
			Want:       `{"visitors":0}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_B",
			Method:     http.MethodPatch,
			Uri:        "/records/events/1",
			Body:       `{"visitors":1}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_C",
			Method:     http.MethodPatch,
			Uri:        "/records/events/1",
			Body:       `{"visitors":1}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_D",
			Method:     http.MethodPatch,
			Uri:        "/records/events/1,1",
			Body:       `[{"visitors":1},{"visitors":1}]`,
			Want:       `[1,1]`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_E",
			Method:     http.MethodGet,
			Uri:        "/records/events/1?include=visitors",
			Body:       ``,
			Want:       `{"visitors":4}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_F",
			Method:     http.MethodPatch,
			Uri:        "/records/events/1",
			Body:       `{"visitors":-4}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "069_increment_event_visitors_G",
			Method:     http.MethodGet,
			Uri:        "/records/events/1?include=visitors",
			Body:       ``,
			Want:       `{"visitors":0}`,
			StatusCode: http.StatusOK,
		},
		/* Needs authorization middleware
		{
			Name:       "070_list_invisibles",
			Method:     http.MethodGet,
			Uri:        "/records/invisibles",
			Body:       ``,
			Want:       `{"code":1001,"message":"Table 'invisibles' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		*/
		{
			Name:   "071_add_comment_with_invisible_record_A",
			Method: http.MethodPost,
			Uri:    "/records/comments",
			Body:   `{"user_id":1,"post_id":2,"message":"invisible","category_id":3}`,
			//6 when activate test for sanitation middleware
			Want:       `5`,
			StatusCode: http.StatusOK,
		},
		/* Needs authorization middleware
		{
			Name:       "071_add_comment_with_invisible_record_B",
			Method:     http.MethodGet,
			Uri:        "/records/comments/6",
			Body:       ``,
			Want:       `{"code":1003,"message":"Record '6' not found"}`,
			StatusCode: http.StatusNotFound,
		},
		*/
		{
			Name:       "072_list_nopk",
			Method:     http.MethodGet,
			Uri:        "/records/nopk",
			Body:       ``,
			Want:       `{"records":[{"id":"e42c77c6-06a4-4502-816c-d112c7142e6d"}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_A",
			Method:     http.MethodPost,
			Uri:        "/records/kunsth√•ndv√¶rk",
			Body:       `{"id":"b55decba-8eb5-436b-af3e-148f7b4eacda","Umlauts √§_√∂_√º-COUNT":4,"user_id":2}`,
			Want:       `"b55decba-8eb5-436b-af3e-148f7b4eacda"`,
			StatusCode: http.StatusOK,
		},
		/* Needs authorization middlware
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_B",
			Method:     http.MethodGet,
			Uri:        "/records/kunsth√•ndv√¶rk/b55decba-8eb5-436b-af3e-148f7b4eacda",
			Body:       ``,
			Want:       `{"id":"b55decba-8eb5-436b-af3e-148f7b4eacda","invisible_id":null,"Umlauts √§_√∂_√º-COUNT":4,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		*/
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_C",
			Method:     http.MethodPut,
			Uri:        "/records/kunsth√•ndv√¶rk/b55decba-8eb5-436b-af3e-148f7b4eacda",
			Body:       `{"id":"b55decba-8eb5-436b-af3e-148f7b4eacda","Umlauts √§_√∂_√º-COUNT":4,"user_id":2}`,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		/* Needs authorization middlware
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_D",
			Method:     http.MethodGet,
			Uri:        "/records/kunsth√•ndv√¶rk/b55decba-8eb5-436b-af3e-148f7b4eacda",
			Body:       ``,
			Want:       `{"id":"b55decba-8eb5-436b-af3e-148f7b4eacda","invisible_id":null,"Umlauts √§_√∂_√º-COUNT":4,"user_id":1}`,
			StatusCode: http.StatusOK,
		},
		*/
		/* Needs multitenancy middlware
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_E",
			Method:     http.MethodDelete,
			Uri:        "/records/kunsth√•ndv√¶rk/e31ecfe6-591f-4660-9fbd-1a232083037f",
			Body:       ``,
			Want:       `0`,
			StatusCode: http.StatusOK,
		},
		*/
		{
			Name:       "073_multi_tenancy_kunsthandvaerk_F",
			Method:     http.MethodDelete,
			Uri:        "/records/kunsth√•ndv√¶rk/b55decba-8eb5-436b-af3e-148f7b4eacda",
			Body:       ``,
			Want:       `1`,
			StatusCode: http.StatusOK,
		},
		{
			Name:   "074_custom_kunsthandvaerk_A",
			Method: http.MethodPatch,
			Uri:    "/records/kunsth√•ndv√¶rk/e42c77c6-06a4-4502-816c-d112c7142e6d",
			Body:   `{"Umlauts √§_√∂_√º-COUNT":10}`,
			Want:   `1`,
			/* Needs customization middleware
			WantHeader: map[string]string{"X-Time-Taken": "0.003"},
			*/
			StatusCode: http.StatusOK,
		},
		{
			Name:   "074_custom_kunsthandvaerk_B",
			Method: http.MethodPatch,
			Uri:    "/records/kunsth√•ndv√¶rk/e42c77c6-06a4-4502-816c-d112c7142e6d",
			Body:   `{"Umlauts √§_√∂_√º-COUNT":-10}`,
			Want:   `1`,
			/* Needs customization middleware
			WantHeader: map[string]string{"X-Time-Taken": "0.003"},
			*/
			StatusCode: http.StatusOK,
		},
		{
			Name:       "075_list_tag_usage_A",
			Method:     http.MethodGet,
			Uri:        "/records/tag_usage",
			Body:       ``,
			Want:       `{"records":[{"count":2,"id":1,"name":"funny"},{"count":2,"id":2,"name":"important"}]}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "075_list_tag_usage_B",
			Method:     http.MethodGet,
			Uri:        "/records/tag_usage/1",
			Body:       ``,
			Want:       `{"count":2,"id":1,"name":"funny"}`,
			StatusCode: http.StatusOK,
		},
		{
			Name:       "075_list_tag_usage_C",
			Method:     http.MethodDelete,
			Uri:        "/records/tag_usage/1",
			Body:       ``,
			Want:       `{"code":1015,"message":"Operation 'delete' not supported"}`,
			StatusCode: http.StatusMethodNotAllowed,
		},
		// Spatial and sqlite
		{
			Name:       "076_list_user_locations_within_geometry",
			Method:     http.MethodGet,
			Uri:        "/records/users?include=id,location&filter=location,swi," + url.QueryEscape("POLYGON((10 10,10 50,50 50,50 10,10 10))"),
			Body:       ``,
			Want:       `{"records":[{"id":1,"location":"POINT(30 20)"}]}`,
			StatusCode: http.StatusOK,
		},
	}
	utils.RunTests(t, serverUrl, tt)
}
